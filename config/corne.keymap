/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        // Customized mod_tap and layer_tap:
        // - Enables quick_tap. Useful for backspace/space.
        // - Switch to balanced flavor to allow for fast (back)space + character rollovers.
        mt_: custom_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
                        quick_tap_ms = <500>;
            bindings = <&kp>, <&kp>;
        };
        lt_: custom_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
                        quick_tap_ms = <500>;
            bindings = <&mo>, <&kp>;
        };

    };
    
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | 
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | 
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | 
//  | CTRL ESC | SHIFT | GUI SPC |   | LWR TAB | RSE RET | ALT BKSP |
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T        &kp Y &kp U  &kp I      &kp O   &kp P    &none
   &none &kp A &kp S &kp D &kp F &kp G        &kp H &kp J  &kp K      &kp L   &kp SEMI &none
   &none &kp Z &kp X &kp C &kp V &kp B        &kp N &kp M  &kp COMMA  &kp DOT &kp FSLH &none
   &mt_ LCTRL ESC &kp LSHFT &mt_ LGUI SPACE   &lt_ 1 TAB   &lt_ 2 RET &mt_ LALT BKSP
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// |     |     |     |     | DEL |   |     |  UP |     | HOME|PG_UP|
// |     |     |     |     |     |   | LFT | DWN | RGT | END |PG_DN|
//             |     |     |     |   |     |  3  |     |
                        bindings = <
   &none &kp N1 &kp N2 &kp N3 &kp N4 &kp N5    &kp N6   &kp N7   &kp N8    &kp N9   &kp N0    &none
   &none &trans	&trans &trans &trans &kp DEL   &trans   &kp UP   &trans    &kp HOME &kp PG_UP &none
   &none &trans	&trans &trans &trans &trans    &kp LEFT &kp DOWN &kp RIGHT &kp END  &kp PG_DN &none
                       &trans &trans &trans    &trans   &mo      3 &trans
                        >;
                };
                
                raise_layer {
// -----------------------------------------------------------------------------------------
// |PSCRN|KP_NLCK|KP_N7|KP_N8|KP_N9|   |  /  |  -  |  *  |  <  |  >   |
// | INS |   -   |KP_N4|     |KP_N6|   |KP_N5|  +  |  =  |  [  |  ]   |
// |  ~  |   \   |KP_N1|KP_N2|KP_N3|   |KP_N0|  .  |  '  |  {  |  }   | 
//               |     |     |     |   |  3  |     |     |
                        bindings = <
   &none &kp PSCRN &kp KP_NLCK &kp KP_N7 &kp KP_N8 &kp KP_N9   &kp KP_SLASH &kp KP_MINUS &kp KP_ASTERISK &kp LT   &kp GT &none
   &none &kp INS   &kp MINUS   &kp KP_N4 &none     &kp KP_N6   &kp KP_N5    &kp KP_PLUS  &kp EQUAL       &kp LBKT &kp RBKT &none
   &none &kp TILDE &kp BSLH    &kp KP_N1 &kp KP_N2 &kp KP_N3   &kp KP_N0    &kp KP_DOT   &kp SQT         &kp LBRC &kp RBRC &none
                               &trans    &trans    &trans      &mo 3     &trans    &trans
                        >;
                };
                
                fn_layer {
// -----------------------------------------------------------------------------------------
// | F1   | F2    | F3    | F4    | F5    |   | F6  | F7   | F8  | F9  | F10  |
// | F11  | F12   |       |       |       |   |     |      |     |     |      |
// |BT_CLR|BT_SEL0|BT_SEL1|BT_SEL2|BT_SEL3|   |EP_ON|EP_OFF|     |     |      |   
//                |       |       |       |   |     |      |     |
                      bindings = <
    &none &kp F1     &kp F2       &kp F3       &kp F4       &kp F5         &kp F6           &kp F7            &kp F8 &kp F9 &kp F10 &none
    &none &kp F11    &kp F12      &none        &none        &none          &none            &none             &none  &none  &none   &none
    &none &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3   &ext_power EP_ON &ext_power EP_OFF &none  &none  &none   &none
                                  &trans       &trans       &trans         &trans           &trans            &trans
                     >;
              };
        };
};
